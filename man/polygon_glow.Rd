% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polygon_glow.R
\name{polygon_glow}
\alias{polygon_glow}
\title{Apply glow style to polygons.}
\usage{
polygon_glow(
  x,
  y,
  id,
  sub_id = id,
  gp = gpar(),
  n = 10,
  amount = 3,
  bg = TRUE,
  closed = FALSE,
  rule = "evenodd",
  ...
)
}
\arguments{
\item{x, y}{A \code{numeric} or \code{unit} object specifying x/y coordinates.}

\item{id, sub_id}{A \code{numeric} to separate locations into distinct paths
or sub-paths. All coordinates with the same \code{id} belong to the same
path or sub-path. These arguments are assumed to start at 1 and increase by
exactly 1 at the start of a new path.}

\item{n}{An \code{integer} for the number of times a line is to be repeated.
Larger numbers look smoother but might also be somewhat heavier to compute.}

\item{amount}{A \code{numeric} of length 1 indicating the amount of glow to
produce.}

\item{bg}{A \code{logical} of length 1. Whether to return the filled
background of the polygon (default: \code{TRUE}).}

\item{closed}{A \code{logical} of length 1. Whether the polygon is to be
closed (default: \code{FALSE}).}

\item{...}{Other arguments passed on to the \code{grid::gpar()} function.}

\item{colour, fill}{A colour specification of either length 1 or of the same
length as \code{length(unique(sub_id))}.}

\item{lwd}{A \code{numeric} specifying the line width of either length 1 or
of the same length as \code{length(unique(sub_id))}.}

\item{lty}{A linetype specification of either length 1 or of the same length
as \code{length(unique(sub_id))}.}
}
\value{
A \code{list} with elements \code{fg} and \code{bg} which are grobs
  or \code{NULL}.
}
\description{
Forms a grob graphical object that will draw polygons with a glow.
}
\details{
The glowing effect is achieved by copying the polygon several times
  with increasing width and decreasing alpha.

  Will make separate foreground (lines) and background (fills) grobs.
}
\examples{
# Some example data
df <- data.frame(
  x = c(0, 0.5, 1, 0.5, 0.25, 0.5, 0.75, 0.5),
  y = c(0.5, 0, 0.5, 1, 0.5, 0.25, 0.5, 0.75),
  sub_id = rep(c(1, 2), each = 4),
  id = rep(1, each = 8)
)

# Constructing polygon
pgon <- polygon_glow(
  df$x,  df$y,
  df$id, df$sub_id,
  colour = c("blue", "red"), lty = c(1, 4),
  fill = "grey50", n = 50, closed = TRUE, lwd = 3
)

# Rendering in grid
grid.newpage()
grid.draw(pgon$bg)
grid.draw(pgon$fg)
}
