% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/style_wiggle.R
\name{wiggle}
\alias{wiggle}
\alias{element_line_wiggle}
\alias{element_rect_wiggle}
\alias{wiggling_geoms}
\title{Wiggle style}
\usage{
wiggle(amount = 3, seed = NULL)

element_line_wiggle(amount = 3, seed = NULL, ...)

element_rect_wiggle(amount = 3, seed = NULL, ...)

wiggling_geoms(
  amount = 5,
  fill = NULL,
  colour = NULL,
  linewidth = NULL,
  linetype = NULL,
  color = NULL,
  lineend = NULL,
  sides = "tlbr",
  seed = NULL,
  n = 50
)
}
\arguments{
\item{amount}{A \code{numeric} of length 1 setting the amount of wiggling to
occur.}

\item{seed}{An \code{integer} to set the seed for reproducible wiggling.}

\item{...}{Arguments passed to \code{element_*_seq()}.}

\item{fill}{Fill colour.}

\item{colour, color}{Line/border colour. Color is an alias for colour.}

\item{linewidth}{Line/border size in mm.}

\item{linetype}{Line type. An integer (0:8), a name (blank, solid,
dashed, dotted, dotdash, longdash, twodash), or a string with
an even number (up to eight) of hexadecimal digits which give the
lengths in consecutive positions in the string.}

\item{lineend}{Line end Line end style (round, butt, square)}

\item{sides}{A \code{character} of length one containing any of \code{"t"},
\code{"l"}, \code{"b"} and/or \code{"r"}. If these letters are present,
edges are drawn at the top (t), left (l), bottom (b) or right (r),
respectively. Including all these letters will draw all rectangle edges
(default), whereas including none of these letters will not draw edges.}

\item{n}{An \code{integer} of length one indicating how many points to
interpolate.}
}
\value{
For \code{wiggle()}, a \code{function}.

For \code{element_rect_wiggle()}, an \code{element_rect_seq} type
  list.

For \code{element_line_wiggle()}, an \code{element_line_seq} type
  list.

For \code{wiggling_geoms}, a partial \code{theme} object.
}
\description{
'Wiggle' is a theme style that adds an amount of cumulative uniform noise to
interpolated lines, making them wiggle a bit. The functions are used in the
following way: \describe{
  \item{\code{wiggle()}}{is a function factory that produces a function that
  is subsequently used in elements to make lines wiggle}
  \item{\code{element_rect_wiggle()}, \code{element_line_wiggle}}{are
  convenience wrappers around \code{element_*_seq()} that pass down the
  function generated by \code{wiggle()}.}
  \item{\code{wiggling_geoms()}}{is a convenience theme setter for the
  \code{elementalist.geom_rect} and \code{elementalist.geom_line} elements.}
}
}
\details{
The amount of wiggle added to lines and rectangles is absolute. This
makes it easier to make more uniform wiggles, but causes relative distortion
when resizing the plot window or device.
}
\examples{
barplot <- ggplot(mpg, aes(class)) +
  geom_bar_theme(aes(colour = class)) +
  geom_line_theme(stat = "count", aes(group = -1))

# Making geoms wiggle
barplot + wiggling_geoms()

# Making only line geoms wiggle
barplot + theme(elementalist.geom_line = element_line_wiggle(10))

# Making only rect geoms wiggle
barplot + theme(elementalist.geom_rect = element_rect_wiggle(5))

# Let other theme elements wiggle
barplot + theme(
  axis.line.x = element_line_wiggle(),
  axis.line.y = element_line_wiggle(),
  legend.background = element_rect_wiggle(colour = "grey20")
)
}
\seealso{
Other theme styles: 
\code{\link{glow}()},
\code{\link{multicolour}()}
}
\concept{theme styles}
