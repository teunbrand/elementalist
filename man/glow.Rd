% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/style_glow.R
\name{glow}
\alias{glow}
\alias{element_line_glow}
\alias{element_rect_glow}
\alias{glowing_geoms}
\title{Glowing lines}
\usage{
glow(amount = 3)

element_line_glow(amount = 3, ...)

element_rect_glow(amount = 3, ...)

glowing_geoms(
  amount = 3,
  fill = NULL,
  colour = NULL,
  size = NULL,
  linetype = NULL,
  color = NULL,
  lineend = NULL,
  sides = "tlbr",
  n = 50
)
}
\arguments{
\item{amount}{A \code{numeric} larger than 0 for the amount of glow to add.}

\item{...}{
  Arguments passed on to \code{\link[=element_line_seq]{element_line_seq}}, \code{\link[=element_rect_seq]{element_rect_seq}}
  \describe{
    \item{\code{fun}}{A \code{function} to apply to the interpolated lines}
    \item{\code{n}}{An \code{integer} of length one indicating how many points to
interpolate.}
    \item{\code{colour}}{Line/border colour. Color is an alias for colour.}
    \item{\code{size}}{Line/border size in mm; text size in pts.}
    \item{\code{linetype}}{Line type. An integer (0:8), a name (blank, solid,
dashed, dotted, dotdash, longdash, twodash), or a string with
an even number (up to eight) of hexadecimal digits which give the
lengths in consecutive positions in the string.}
    \item{\code{lineend}}{Line end Line end style (round, butt, square)}
    \item{\code{color}}{Line/border colour. Color is an alias for colour.}
    \item{\code{arrow}}{Arrow specification, as created by \code{\link[grid:arrow]{grid::arrow()}}}
    \item{\code{inherit.blank}}{Should this element inherit the existence of an
\code{element_blank} among its parents? If \code{TRUE} the existence of
a blank element among its parents will cause this element to be blank as
well. If \code{FALSE} any blank parent element will be ignored when
calculating final element state.}
    \item{\code{sides}}{A \code{character} of length one containing any of \code{"t"},
\code{"l"}, \code{"b"} and/or \code{"r"}. If these letters are present,
edges are drawn at the top (t), left (l), bottom (b) or right (r),
respectively. Including all these letters will draw all rectangle edges
(default), whereas including none of these letters will not draw edges.}
  }}
}
\value{
For \code{glow()}, a \code{function}.

For \code{element_rect_glow()}, an \code{element_rect_seq} type list.

For \code{element_line_glow()}, an \code{element_line_seq} type list.

For \code{glowing_geoms}, a partial \code{theme} object.
}
\description{
Makes copies of lines with increasing size and decreasing alpha, giving an
glowing appearance. The functions are used in the following way: \describe{
  \item{\code{glow()}}{is a function factory that produces a function that is
  subsequently used in elements to make lines glow}
  \item{\code{element_rect_glow()}, \code{element_line_glow}}{are convenience
  wrappers around \code{element_*_seq()} that pass down the function
  generated by \code{glow()}.}
  \item{\code{glowing_geoms()}}{is a convenience theme setter for the
  \code{elementalist.geom_rect} and \code{elementalist.geom_line} elements.}
}
}
\details{
When the elements have no colours by setting them to \code{NA}, this
will not draw glowing lines, as is to be expected.

Due to the way glowing lines are constructed, having non-solid linetypes
may lead to awkward results.
}
\examples{
barplot <- ggplot(mpg, aes(class)) +
  geom_bar_theme(aes(colour = class)) +
  geom_line_theme(stat = "count", aes(group = -1))

# Making geoms glow
barplot + glowing_geoms()

# Making only line geoms glow
barplot + theme(elementalist.geom_line = element_line_glow(colour = "magenta"))

# Making only rect geoms glow
barplot + theme(elementalist.geom_rect = element_rect_glow(fill = "grey50"))

# Let other theme elements glow
barplot + theme(
  axis.line.x = element_line_glow(colour = "magenta"),
  axis.line.y = element_line_glow(colour = "cyan"),
  legend.background = element_rect_glow(colour = "yellow")
)
}
\seealso{
Other theme styles: 
\code{\link{multicolour}()},
\code{\link{wiggle}()}
}
\concept{theme styles}
